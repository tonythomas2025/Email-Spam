# -*- coding: utf-8 -*-
"""stre app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nydEIBgneesiIBaLGqeXQsXHSejct2z5
"""

import streamlit as st
import pickle
import re
import string

# Load model
# Corrected the file path to a potential pickle file.
# Replace '/content/spam_model.pkl' with the actual path to your pickled model file.
try:
    with open("/content/spam_model.pkl", "rb") as f: # Open in binary read mode
        model = pickle.load(f) # Load the model using pickle and assign it to the variable 'model'
except FileNotFoundError:
    st.error("Error: Model file not found. Please ensure 'spam_model.pkl' is in the correct location.")
    st.stop() # Stop execution if the model file is not found
except Exception as e:
    st.error(f"Error loading the model: {e}")
    st.stop() # Stop execution if there's another loading error

# Preprocessing function
def preprocess(text):
    text = text.lower()
    text = re.sub(r'\d+', '', text)
    text = text.translate(str.maketrans('', '', string.punctuation))
    return text

# UI
st.title("üì¨ Spam vs. Ham Email Classifier")
st.write("Enter an email message below. The model will predict whether it is spam or ham.")

input_text = st.text_area("‚úâÔ∏è Email Content")

if st.button("Classify"):
    if not input_text.strip():
        st.warning("Please enter some text.")
    else:
        cleaned = preprocess(input_text)
        # Ensure the model variable is successfully loaded before making predictions
        if 'model' in locals():
            prediction = model.predict([cleaned])[0]
            if prediction == "spam":
                st.error("üö® This is SPAM!")
            else:
                st.success("‚úÖ This is HAM (not spam).")
        else:
            st.error("Model could not be loaded. Classification is not possible.")