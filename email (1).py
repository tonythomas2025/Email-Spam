# -*- coding: utf-8 -*-
"""Email.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RyS2WAAa6Y1LsvD7pBMtzNLSqteG-1sW
"""

import pandas as pd
import re
import string
import pickle
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import Pipeline
from sklearn.metrics import classification_report

# Load dataset
data = pd.read_csv("/content/Spam .csv", encoding='latin-1')
data = data.drop(columns=['Unnamed: 2', 'Unnamed: 3', 'Unnamed: 4'])
data.columns = ['Label', 'Text']

# Preprocessing function
def preprocess(text):
    text = text.lower()
    text = re.sub(r'\d+', '', text)
    text = text.translate(str.maketrans('', '', string.punctuation))
    return text

data['Clean_Text'] = data['Text'].apply(preprocess)

# Balance classes
spam = data[data['Label'] == 'spam']
ham = data[data['Label'] == 'ham'].sample(len(spam), random_state=42)
balanced_data = pd.concat([spam, ham])

X = balanced_data['Clean_Text']
y = balanced_data['Label']

# Train/test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Pipeline: TF-IDF + Naive Bayes
pipeline = Pipeline([
    ('tfidf', TfidfVectorizer()),
    ('nb', MultinomialNB())
])

# Train and evaluate
pipeline.fit(X_train, y_train)
y_pred = pipeline.predict(X_test)
print(classification_report(y_test, y_pred))

# Save model
with open("spam_classifier.pkl", "wb") as f:
    pickle.dump(pipeline, f)

print("âœ… Model saved as spam_classifier.pkl")