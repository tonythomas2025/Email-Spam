# -*- coding: utf-8 -*-
"""email.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UcMvtoLi3cxgx3n4B_ByAZb4t9R5A071
"""

import numpy as np
import pandas as pd
import re
import string
import pickle
from sklearn.model_selection import train_test_split
from sklearn.pipeline import Pipeline
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report

# Load dataset
df = pd.read_csv("/content/spam.csv", encoding='latin-1')
df.columns = ['label', 'text']

# Text cleaning
def clean(text):
    text = text.lower()
    text = re.sub(r'\d+', '', text)
    text = text.translate(str.maketrans('', '', string.punctuation))
    return text.strip()

# Apply text preprocessing
df['text'] = df['text'].apply(clean)

# Balance dataset
spam = df[df['label'] == 'spam']
ham = df[df['label'] == 'ham'].sample(len(spam), random_state=42)
data = pd.concat([spam, ham]).sample(frac=1, random_state=42)

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(data['text'], data['label'], test_size=0.25, random_state=42)

# Pipeline
model = Pipeline([
    ('tfidf', TfidfVectorizer(stop_words='english')),
    ('nb', MultinomialNB())
])

# Train
model.fit(X_train, y_train)

# Evaluate
y_pred = model.predict(X_test)
print("âœ… Classification Report:\n")
print(classification_report(y_test, y_pred))

# Save model and vectorizer
pickle.dump(model, open("spam_model.pkl", "wb"))
pickle.dump(model.named_steps['tfidf'], open("vectorizer.pkl", "wb"))